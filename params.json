{"name":"kern","tagline":"Kernel toolbox for MATLAB.","body":"Matlab Kernel Toolbox\r\n=====================\r\n\r\n\r\nRelease Information\r\n-------------------\r\n\r\n**Current release is 0.227**.\r\n\r\nAs well as downloading the KERN software you need to obtain the toolboxes specified below. \r\n\r\n| **Toolbox**                                | **Version** |\r\n|--------------------------------------------|-------------|\r\n| [OPTIMI](/optimi/downloadFiles/vrs0p132)   | 0.132       |\r\n| [NDLUTIL](/ndlutil/downloadFiles/vrs0p162) | 0.162       |\r\n| [NETLAB](/netlab/downloadFiles/vrs3p3)     | 3.3         |\r\n| [ERFCXZ](/erfcxz/downloadFiles/vrs0p001)   | 0.001       |\r\n| [ERFZ](/erfz/downloadFiles/vrs0p001)       | 0.001       |\r\n\r\nAdded diag covariance which uses the inputs as a diagonal covariance function (takes a one dimensional input only). Useful for having heteroschedastic noise. And index covariance functions which return a value if the two input indices are identical, and zero otherwise. Also includes Jaakko's NDDISIM and NDSIM covariance functions.\r\n\r\n### Version 0.226\r\n\r\nAdded velotrans covariance function which allows a moving field type covariance function with a constant velocity. Added rbfperiodic2 for periodic covariances with learnable period. Added various multioutput covariance functions for switched latent force models.\r\n\r\n### Version 0.225\r\n\r\nUpdates from Mauricio for the latest release of the MULTIGP toolbox.\r\n\r\n### Version 0.224\r\n\r\nAdded disimSample and simSample for sampling from these multioutput covariance functions. Michalis added kernel types rbfard2 and linard2 which use a slightly different formulation of the ARD parameters.\r\n\r\n### Version 0.223\r\n\r\nMinor fix of \"ard\" kernel which somehow had a kernel computation bit placed in the parameter initialization --- cut and past mistake at some point.\r\n\r\n### Version 0.222\r\n\r\nRemoved division by kernel variance in kernels for computing the variance of the kernel. It causes numerical problems when the variance is small. Also changed mlp kernels so that the default variance distant from the origin is 1 instead of pi/2.\r\n\r\n### Version 0.221\r\n\r\nFixed code for reading in kernels from C++ files.\r\n\r\n### Version 0.22\r\n\r\nAdded Wiener kernel and various kernels for multi output kernels including white noise being propagated through the first and second order differential equation.\r\n\r\n### Version 0.21\r\n\r\nCompatibility changes for NCCA and SGPLVM toolboxes.\r\n\r\n### Version 0.2\r\n\r\nFurther minor updates to kern for working with the new gpsim code (corrected handling of white kernel in multiKern).\r\n\r\n### Version 0.171\r\n\r\nMinor changes to kernCreate for multiKern structures where there are different numbers of points in each block.\r\n\r\n### Version 0.17\r\n\r\nFurther improvements on the stability of the sim kernel. Addition of the driven input single input motif kernel (Antti Honkela) and the modification of the multiKern type to allow each block to have a different number of time points (Pei Gao).\r\n\r\n### Version 0.168\r\n\r\nFound a bug in tensor gradient which meant gradients weren't being computed correctly with respect to X when more X and X2 are both provided as input arguments and both have length larger than 1.\r\n\r\nAntti Honkela improved the numerial stability of the sim kernel through judicious use of erfc.\r\n\r\n### Version 0.167\r\n\r\nAdded 'translate' kernel which allows wrapping of other kernels with a kernel that translates the input location. Useful for moving the non-stationarity around the input space.\r\n\r\n### Version 0.166\r\n\r\nAdded periodic version of RBF kernel (see Rasmussen and Williams pg 92 or Mackay's introduction to GPs (1998)) and periodic version of Gibbs's non-statinary kernel (see e.g. pg 93 of Rasmussen and Williams).\r\n\r\n### Version 0.165\r\n\r\nAdded flag which indicates whether or not a kernel is stationary. This can be used for speeding computations (stationary kernels have a constant diagonal). Also replaced calls to constraining functions with 'optimiDefaultConstraint' calls which return the default constraint (making it easier for the user to change).\r\n\r\n### Version 0.163\r\n\r\nThis release removes the stubs for several KernDiagGradX.m files, which were confusing kernDiagGradX.m, which assumes they only exist if the function is implemented. For the kernel types 'lin', 'poly', 'mlp', and their 'ard' counter-types, these files existed but weren't yet implemented.\r\n\r\n### Version 0.162\r\n\r\nAdded the Gibbs's non-stationary kernel, the rational quadratic kernel and the Matern kernel with nu = 3/2 and nu = 5/2.\r\n\r\n### Verison 0.161\r\n\r\nIntroduced the single input motif kernel for the GPSIM toolbox. Also there is much more documentation, and a new file kernelGenerator.py for creating the basic files for your own kernels.\r\n\r\nExamples\r\n--------\r\n\r\nThis toolbox allows computation of several different kernels and their gradients. You can add kernels to the toolbox by creating versions of the relevant files. Once added, they can be tested using the `kernTest`. For example you can test the RBF kernel by writing\r\n\r\n```matlab\r\n>> kernTest('rbf')\r\n```\r\n\r\nThere are several kernels implemented, the ones that are being maintained for the latest release are:\r\n\r\n`  gibbs  gibbsperiodic  lin  linard  rbf  rbfard  rbfperiodic  matern32  matern52  ratquad  mlp  mlpard  poly  polyard  sim  lfm  disim  white  whitefixed  bias  cmpnd  wiener  gg  ou  lfmwhite  simwhite  ggwhite  gaussianwhite  gaussian  tensor (tensor kernels).  file (a kernel written in a file). `\r\n\r\nA new kernel can be created using the compound kernel, `cmpnd` or the tensor kernel, `tensor`. The compound kernel is made up of sums of individual kernels. Most often you will need to create a kernel containing a base kernel (e.g. `rbf`) and adding a white noise kernel, `white` and perhaps a constant offset through the bias kernel `bias`. On initialisation most kernel parameters are set to 1. Exceptions are ARD scale parameters, the variance of the white and bias kernels and the weight and bias variances of the `mlp` kernels.\r\n\r\nLFM Kernel\r\n----------\r\n\r\n### FORTRAN Compiler for LFM Kernel\r\n\r\nTo install the compiler\r\n\r\nGo to <http://www.g95.org/downloads.shtml> and download the binary version suitable for your computer and operating system or compile the source code.\r\n\r\nIn MATLAB, write\r\n\r\n```matlab\r\n>>  mex -setup\r\n```\r\n\r\nThen choose option 1 and make a copy `mexopts.sh` in your local directory. Change the name to `g95opts.sh` or whatever you prefer.\r\n\r\nModify myopts.sh following the instructions in <http://www.g95.org/howto.shtml#matlab>\r\n\r\nWhen compiling in MATLAB, use the -f command to use your local `g95opts.sh` file, for example:\r\n\r\n```\r\n>> mex -f myopts.sh lfmComputeUpsilonMatrix.f\r\n```\r\n\r\nPage updated on Tue Aug 9 20:39:05 2011","google":"UA-62968536-1","note":"Don't delete this file! It's used internally to help with page regeneration."}